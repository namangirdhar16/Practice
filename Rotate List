/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int length(ListNode * head)
    {
        int cnt = 0;
        ListNode * temp = head;
        while(temp)
        {
            cnt++;
            temp = temp->next;
        }
        return cnt;
    }
    ListNode* rotateRight(ListNode* head, int k) {
        
        if(head == NULL || head->next == NULL || k==0 )
            return head;
        //1 2 3 4 5 
        // k %= len;
        int len = length(head);
        if(k%len == 0 )
            return head;
        k = k%len;
        int cnt = 0;
        
        ListNode * temp = head;
        while(cnt < len - k - 1)
        {
            temp = temp->next;
            cnt++;
        }
        ListNode * secondLast = temp->next;
        temp->next = NULL;
        temp = secondLast ;
        
        while(temp->next)
        {
          temp = temp->next;
        }
        temp->next = head;
        return secondLast;
        
        
        
    }
};
