/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        
        int sum = l1->val + l2->val;
        int carry = sum/10;
        ListNode * tail = new ListNode(sum % 10);
        ListNode * head = tail;
        ListNode * ptr1 = l1->next;
        ListNode * ptr2 = l2->next;
        while(ptr1!=NULL || ptr2 != NULL || carry > 0) {   
            sum = 0;
           
            if(ptr1) {
            sum += ptr1->val;
                ptr1 = ptr1->next;
            }
            if(ptr2) {
                sum+=ptr2->val;
                ptr2 = ptr2->next;
            }
            
            
            tail->next = new ListNode((sum + carry) % 10);
            carry = (sum + carry) / 10;
            tail = tail->next;
            
        }
        tail->next = NULL;
        return head;
    }
};
